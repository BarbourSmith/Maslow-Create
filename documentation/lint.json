[
  {
    "name": "Display#baseLog",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 523,
        "line": "    /**\r"
      },
      {
        "lineNumber": 524,
        "line": "     * This function is intended to calculate the base log of two numbers and round it to an integer\r"
      },
      {
        "lineNumber": 525,
        "line": "     * @param {number,number}\r"
      },
      {
        "lineNumber": 526,
        "line": "     */ \r"
      },
      {
        "lineNumber": 527,
        "line": "    baseLog(x,y){\r"
      }
    ],
    "codeParams": [
      "x",
      "y"
    ],
    "docParams": []
  },
  {
    "name": "Display#dist3D",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 532,
        "line": "    /**\r"
      },
      {
        "lineNumber": 533,
        "line": "     * This function is intended to calculate the 3d distance between object and camera\r"
      },
      {
        "lineNumber": 534,
        "line": "     * @param {number}\r"
      },
      {
        "lineNumber": 535,
        "line": "     */ \r"
      },
      {
        "lineNumber": 536,
        "line": "    dist3D(position){\r"
      }
    ],
    "codeParams": [
      "position"
    ],
    "docParams": []
  },
  {
    "name": "Localmenu#placeAtom",
    "filePath": "src/js/localmenu.js",
    "lines": [
      {
        "lineNumber": 61,
        "line": "    /**\r"
      },
      {
        "lineNumber": 62,
        "line": "     * Runs when a menu option is clicked to place a new atom from the local atoms list.\r"
      },
      {
        "lineNumber": 63,
        "line": "     * @param {object} ev - The event triggered by click event on a menu item.\r"
      },
      {
        "lineNumber": 64,
        "line": "     */ \r"
      },
      {
        "lineNumber": 65,
        "line": "    placeAtom(e){\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "ev"
    ]
  },
  {
    "name": "placeNewNode",
    "filePath": "src/js/NewMenu.js",
    "lines": [
      {
        "lineNumber": 194,
        "line": "/**\r"
      },
      {
        "lineNumber": 195,
        "line": "     * Runs when a menu option is clicked to place a new atom from the local atoms list.\r"
      },
      {
        "lineNumber": 196,
        "line": "     * @param {object} ev - The event triggered by click event on a menu item.\r"
      },
      {
        "lineNumber": 197,
        "line": "     */ \r"
      },
      {
        "lineNumber": 198,
        "line": "function placeNewNode(e){\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "ev"
    ]
  },
  {
    "name": "Atom#addIO",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 228,
        "line": "    /**\r"
      },
      {
        "lineNumber": 229,
        "line": "     * Adds a new attachment point to this atom\r"
      },
      {
        "lineNumber": 230,
        "line": "     * @param {boolean} type - The type of the IO (input or output)\r"
      },
      {
        "lineNumber": 231,
        "line": "     * @param {string} name - The name of the new attachment point\r"
      },
      {
        "lineNumber": 232,
        "line": "     * @param {object} target - The attom to attach the new attachment point to. Should we force this to always be this one?\r"
      },
      {
        "lineNumber": 233,
        "line": "     * @param {string} valueType - Describes the type of value the input is expecting options are number, geometry, array\r"
      },
      {
        "lineNumber": 234,
        "line": "     * @param {object} defaultValue - The default value to be used when the value is not yet set\r"
      },
      {
        "lineNumber": 235,
        "line": "     */ \r"
      },
      {
        "lineNumber": 236,
        "line": "    addIO(type, name, target, valueType, defaultValue, ready = false, primary = false){\r"
      }
    ],
    "codeParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue",
      "ready",
      "primary"
    ],
    "docParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue"
    ]
  },
  {
    "name": "Atom#createMarkdownListItem",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 803,
        "line": "    /**\r"
      },
      {
        "lineNumber": 804,
        "line": "     * Creates a html representation of the passed text. Used in the sidebar.\r"
      },
      {
        "lineNumber": 805,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 806,
        "line": "     * @param {string} texxt - The text used to generate the markdown html.\r"
      },
      {
        "lineNumber": 807,
        "line": "     */ \r"
      },
      {
        "lineNumber": 808,
        "line": "    createMarkdownListItem(list, text){\r"
      }
    ],
    "codeParams": [
      "list",
      "text"
    ],
    "docParams": [
      "list",
      "texxt"
    ]
  },
  {
    "name": "Atom#createDropDown",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 824,
        "line": "    /**\r"
      },
      {
        "lineNumber": 825,
        "line": "     * Creates dropdown with multiple options to select. Used in the sidebar.\r"
      },
      {
        "lineNumber": 826,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 827,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 828,
        "line": "     * @param {array} options - A list of options to display in the drop down.\r"
      },
      {
        "lineNumber": 829,
        "line": "     * @param {number} selectedOption - The zero referenced index of the selected option.\r"
      },
      {
        "lineNumber": 830,
        "line": "     * @param {string} description - A description of what the dropdown does.\r"
      },
      {
        "lineNumber": 831,
        "line": "     */ \r"
      },
      {
        "lineNumber": 832,
        "line": "    createDropDown(list,parent,options,selectedOption, description, callback){\r"
      }
    ],
    "codeParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description"
    ]
  },
  {
    "name": "Atom#createCheckbox",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 908,
        "line": "    /**\r"
      },
      {
        "lineNumber": 909,
        "line": "     * Creates button. Used in the sidebar.\r"
      },
      {
        "lineNumber": 910,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 911,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 912,
        "line": "     * @param {string} buttonText - The text on the button.\r"
      },
      {
        "lineNumber": 913,
        "line": "     * @param {object} functionToCall - The function to call when the button is pressed.\r"
      },
      {
        "lineNumber": 914,
        "line": "     */ \r"
      },
      {
        "lineNumber": 915,
        "line": "    createCheckbox(sideBar,text,isChecked,callback){\r"
      }
    ],
    "codeParams": [
      "sideBar",
      "text",
      "isChecked",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "buttonText",
      "functionToCall"
    ]
  }
]