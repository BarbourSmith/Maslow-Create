[
  {
    "name": "Display#baseLog",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 476,
        "line": "    /**\r"
      },
      {
        "lineNumber": 477,
        "line": "     * This function is intended to calculate the base log of two numbers and round it to an integer\r"
      },
      {
        "lineNumber": 478,
        "line": "     * @param {number,number}\r"
      },
      {
        "lineNumber": 479,
        "line": "     */ \r"
      },
      {
        "lineNumber": 480,
        "line": "    baseLog(x,y){\r"
      }
    ],
    "codeParams": [
      "x",
      "y"
    ],
    "docParams": []
  },
  {
    "name": "Display#dist3D",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 485,
        "line": "    /**\r"
      },
      {
        "lineNumber": 486,
        "line": "     * This function is intended to calculate the 3d distance between object and camera\r"
      },
      {
        "lineNumber": 487,
        "line": "     * @param {number}\r"
      },
      {
        "lineNumber": 488,
        "line": "     */ \r"
      },
      {
        "lineNumber": 489,
        "line": "    dist3D(position){\r"
      }
    ],
    "codeParams": [
      "position"
    ],
    "docParams": []
  },
  {
    "name": "Localmenu#placeAtom",
    "filePath": "src/js/localmenu.js",
    "lines": [
      {
        "lineNumber": 61,
        "line": "    /**\r"
      },
      {
        "lineNumber": 62,
        "line": "     * Runs when a menu option is clicked to place a new atom from the local atoms list.\r"
      },
      {
        "lineNumber": 63,
        "line": "     * @param {object} ev - The event triggered by click event on a menu item.\r"
      },
      {
        "lineNumber": 64,
        "line": "     */ \r"
      },
      {
        "lineNumber": 65,
        "line": "    placeAtom(e){\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "ev"
    ]
  },
  {
    "name": "placeNewNode",
    "filePath": "src/js/NewMenu.js",
    "lines": [
      {
        "lineNumber": 194,
        "line": "/**\r"
      },
      {
        "lineNumber": 195,
        "line": "     * Runs when a menu option is clicked to place a new atom from the local atoms list.\r"
      },
      {
        "lineNumber": 196,
        "line": "     * @param {object} ev - The event triggered by click event on a menu item.\r"
      },
      {
        "lineNumber": 197,
        "line": "     */ \r"
      },
      {
        "lineNumber": 198,
        "line": "function placeNewNode(e){\r"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "ev"
    ]
  },
  {
    "name": "Atom#addIO",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 227,
        "line": "    /**\r"
      },
      {
        "lineNumber": 228,
        "line": "     * Adds a new attachment point to this atom\r"
      },
      {
        "lineNumber": 229,
        "line": "     * @param {boolean} type - The type of the IO (input or output)\r"
      },
      {
        "lineNumber": 230,
        "line": "     * @param {string} name - The name of the new attachment point\r"
      },
      {
        "lineNumber": 231,
        "line": "     * @param {object} target - The attom to attach the new attachment point to. Should we force this to always be this one?\r"
      },
      {
        "lineNumber": 232,
        "line": "     * @param {string} valueType - Describes the type of value the input is expecting options are number, geometry, array\r"
      },
      {
        "lineNumber": 233,
        "line": "     * @param {object} defaultValue - The default value to be used when the value is not yet set\r"
      },
      {
        "lineNumber": 234,
        "line": "     */ \r"
      },
      {
        "lineNumber": 235,
        "line": "    addIO(type, name, target, valueType, defaultValue, ready = false, primary = false){\r"
      }
    ],
    "codeParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue",
      "ready",
      "primary"
    ],
    "docParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue"
    ]
  },
  {
    "name": "Atom#createDropDown",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 795,
        "line": "    /**\r"
      },
      {
        "lineNumber": 796,
        "line": "     * Creates dropdown with multiple options to select. Used in the sidebar.\r"
      },
      {
        "lineNumber": 797,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 798,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 799,
        "line": "     * @param {array} options - A list of options to display in the drop down.\r"
      },
      {
        "lineNumber": 800,
        "line": "     * @param {number} selectedOption - The zero referenced index of the selected option.\r"
      },
      {
        "lineNumber": 801,
        "line": "     * @param {string} description - A description of what the dropdown does.\r"
      },
      {
        "lineNumber": 802,
        "line": "     */ \r"
      },
      {
        "lineNumber": 803,
        "line": "    createDropDown(list,parent,options,selectedOption, description, callback){\r"
      }
    ],
    "codeParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description"
    ]
  },
  {
    "name": "Atom#createCheckbox",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 878,
        "line": "    /**\r"
      },
      {
        "lineNumber": 879,
        "line": "     * Creates button. Used in the sidebar.\r"
      },
      {
        "lineNumber": 880,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 881,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 882,
        "line": "     * @param {string} buttonText - The text on the button.\r"
      },
      {
        "lineNumber": 883,
        "line": "     * @param {object} functionToCall - The function to call when the button is pressed.\r"
      },
      {
        "lineNumber": 884,
        "line": "     */ \r"
      },
      {
        "lineNumber": 885,
        "line": "    createCheckbox(sideBar,text,isChecked,callback){\r"
      }
    ],
    "codeParams": [
      "sideBar",
      "text",
      "isChecked",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "buttonText",
      "functionToCall"
    ]
  }
]