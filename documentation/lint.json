[
  {
    "name": "Display#baseLog",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 450,
        "line": "    /**\r"
      },
      {
        "lineNumber": 451,
        "line": "     * This function is intended to calculate the base log of two numbers and round it to an integer\r"
      },
      {
        "lineNumber": 452,
        "line": "     * @param {number,number}\r"
      },
      {
        "lineNumber": 453,
        "line": "     */ \r"
      },
      {
        "lineNumber": 454,
        "line": "    baseLog(x,y){\r"
      }
    ],
    "codeParams": [
      "x",
      "y"
    ],
    "docParams": []
  },
  {
    "name": "Display#dist3D",
    "filePath": "src/js/display.js",
    "lines": [
      {
        "lineNumber": 459,
        "line": "    /**\r"
      },
      {
        "lineNumber": 460,
        "line": "     * This function is intended to calculate the 3d distance between object and camera\r"
      },
      {
        "lineNumber": 461,
        "line": "     * @param {number}\r"
      },
      {
        "lineNumber": 462,
        "line": "     */ \r"
      },
      {
        "lineNumber": 463,
        "line": "    dist3D(position){\r"
      }
    ],
    "codeParams": [
      "position"
    ],
    "docParams": []
  },
  {
    "name": "Atom#addIO",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 217,
        "line": "    /**\r"
      },
      {
        "lineNumber": 218,
        "line": "     * Adds a new attachment point to this atom\r"
      },
      {
        "lineNumber": 219,
        "line": "     * @param {boolean} type - The type of the IO (input or output)\r"
      },
      {
        "lineNumber": 220,
        "line": "     * @param {string} name - The name of the new attachment point\r"
      },
      {
        "lineNumber": 221,
        "line": "     * @param {object} target - The attom to attach the new attachment point to. Should we force this to always be this one?\r"
      },
      {
        "lineNumber": 222,
        "line": "     * @param {string} valueType - Describes the type of value the input is expecting options are number, geometry, array\r"
      },
      {
        "lineNumber": 223,
        "line": "     * @param {object} defaultValue - The default value to be used when the value is not yet set\r"
      },
      {
        "lineNumber": 224,
        "line": "     */ \r"
      },
      {
        "lineNumber": 225,
        "line": "    addIO(type, name, target, valueType, defaultValue, ready = false){\r"
      }
    ],
    "codeParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue",
      "ready"
    ],
    "docParams": [
      "type",
      "name",
      "target",
      "valueType",
      "defaultValue"
    ]
  },
  {
    "name": "Atom#createDropDown",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 761,
        "line": "    /**\r"
      },
      {
        "lineNumber": 762,
        "line": "     * Creates dropdown with multiple options to select. Used in the sidebar.\r"
      },
      {
        "lineNumber": 763,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 764,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 765,
        "line": "     * @param {array} options - A list of options to display in the drop down.\r"
      },
      {
        "lineNumber": 766,
        "line": "     * @param {number} selectedOption - The zero referenced index of the selected option.\r"
      },
      {
        "lineNumber": 767,
        "line": "     * @param {string} description - A description of what the dropdown does.\r"
      },
      {
        "lineNumber": 768,
        "line": "     */ \r"
      },
      {
        "lineNumber": 769,
        "line": "    createDropDown(list,parent,options,selectedOption, description, callback){\r"
      }
    ],
    "codeParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "options",
      "selectedOption",
      "description"
    ]
  },
  {
    "name": "Atom#createCheckbox",
    "filePath": "src/js/prototypes/atom.js",
    "lines": [
      {
        "lineNumber": 844,
        "line": "    /**\r"
      },
      {
        "lineNumber": 845,
        "line": "     * Creates button. Used in the sidebar.\r"
      },
      {
        "lineNumber": 846,
        "line": "     * @param {object} list - The HTML object to attach the new item to.\r"
      },
      {
        "lineNumber": 847,
        "line": "     * @param {object} parent - The parent which has the function to call on the change...this should really be done with a callback function.\r"
      },
      {
        "lineNumber": 848,
        "line": "     * @param {string} buttonText - The text on the button.\r"
      },
      {
        "lineNumber": 849,
        "line": "     * @param {object} functionToCall - The function to call when the button is pressed.\r"
      },
      {
        "lineNumber": 850,
        "line": "     */ \r"
      },
      {
        "lineNumber": 851,
        "line": "    createCheckbox(sideBar,text,isChecked,callback){\r"
      }
    ],
    "codeParams": [
      "sideBar",
      "text",
      "isChecked",
      "callback"
    ],
    "docParams": [
      "list",
      "parent",
      "buttonText",
      "functionToCall"
    ]
  }
]